{{ if .Values.scheduler.enabled -}}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: scheduler
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ .Chart.Name }}-scheduler
spec:
  replicas: {{ .Values.scheduler.replicas }}
  template:
    metadata:
      annotations:
        # This lets us autorestart when the configmap changes!
        checksum/config-map: {{ include (print $.Template.BasePath "/scheduler/configmap.yaml") . | sha256sum }}
      labels:
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        component: scheduler
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      volumes:
      - name: config
        configMap:
          name: {{ .Chart.Name }}-scheduler-config
      containers:
      - command:
        - /usr/local/bin/kube-scheduler
        - --address=0.0.0.0
        - --leader-elect=true
        - --scheduler-name={{ .Chart.Name }}-{{ .Release.Name }}-scheduler
        - --lock-object-namespace={{ .Release.Namespace }}
        - --lock-object-name={{ .Chart.Name }}-{{ .Release.Name }}-scheduler-lock
        - -v=4
        - --policy-config-file=/etc/kube-scheduler/policy.json
        - --use-legacy-policy-config
        image: gcr.io/google_containers/kube-scheduler-amd64:v1.9.0
        volumeMounts:
        - name: config
          mountPath: /etc/kube-scheduler
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10251
          initialDelaySeconds: 15
        name: scheduler
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10251
        resources:
          requests:
            cpu: 1
            memory: 2Gi
      serviceAccountName: {{ .Chart.Name }}-{{ .Release.Name }}-scheduler
{{- end -}}