
{{- /* 
These user-dummy pods can be used to test cluster autoscaling in a
controlled fashion.

Example:
$ echo 'Simulating four users...'
$ kubectl patch deployment user-dummy --patch '{"spec": {"replicas": 4}}'
*/}}
{{- if .Values.scheduling.userPlaceholder.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: user-placeholder
  labels:
    {{- include "jupyterhub.labels" . | nindent 4 }}
spec:
  podManagementPolicy: Parallel
  replicas: {{ .Values.scheduling.userPlaceholder.replicas }}
  selector:
    matchLabels:
      {{- include "jupyterhub.matchLabels" . | nindent 6 }}
  serviceName: "user-placeholder"
  template:
    metadata:
      labels:
        {{- /* Changes here will cause the Deployment to restart the pods. */}}
        {{- include "jupyterhub.matchLabels" . | nindent 8 }}
        hub.jupyter.org/pod-kind: "user"
    spec:
      {{- if .Values.scheduling.podPriority.enabled }}
      priorityClassName: jupyterhub-user-placeholder-priority
      {{- end }}
      {{- if .Values.scheduling.userScheduler.enabled }}
      schedulerName: user-scheduler
      {{- end }}
      {{- $_ := merge (dict "podKind" "user") . }}
      {{- $dummy := include "jupyterhub.prepareScope" $_ }}
      {{- if $_.hasTolerations }}
      {{- include "jupyterhub.tolerations" $_ | nindent 6 }}
      {{- end }}
      nodeSelector: {{ toJson .Values.singleuser.nodeSelector }}
      {{- if $_.hasAffinity }}
      {{- include "jupyterhub.affinity" $_ | nindent 6 }}
      {{- end }}
      terminationGracePeriodSeconds: 0
      automountServiceAccountToken: false
      containers:
        - name: pause
          image: {{ .Values.prePuller.pause.image.name }}:{{ .Values.prePuller.pause.image.tag }}
          resources:
            {{- $_ := merge (dict "type" "user-placeholder") . -}}
            {{- include "jupyterhub.resources" $_ | nindent 12 }}
{{- end }}
